{"version":3,"sources":["components/images/SRLogo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/elements/Home.js","components/hooks/useHomeFetch.js","components/styles/GlobalStyle.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledSRLogo","img","StyledRMDBLogo","Header","className","to","src","SRLogo","alt","TMBDLogo","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImg","title","description","StyledLoadMoreBtn","button","LoadMoreBtn","text","callback","onClick","type","StyledMovieThumb","MovieThumb","clickable","movieId","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setState","timeout","useRef","onChange","e","value","target","clearTimeout","current","setTimeout","placeholder","name","StyledSpinner","Spinner","Home","searchedTerm","setSearchedTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","HeroImage","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","GlobalStyle","createGlobalStyle","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","director","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditResults","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.479a304c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SRLogo.5db18709.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components'\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`\n\nexport const StyledSRLogo = styled.img`\n  height: 50px;\n  margin: 15px 0 0 15px;\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    height: 40px;\n    margin-top: 0px;\n  }\n`\n\nexport const StyledRMDBLogo = styled.img`\n  width: 100px;\n  margin-top: 20px;\n  float: right;\n  @media screen and (max-width: 500px) {\n    width: 90px;\n    margin-top: 5px;\n  }\n`\n","import React from 'react'\r\nimport { Link } from '@reach/router'\r\nimport SRLogo from '../images/SRLogo.png'\r\nimport TMBDLogo from '../images/tmdb_logo.svg'\r\nimport { StyledHeader, StyledRMDBLogo, StyledSRLogo } from '../styles/StyledHeader'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <div className=\"header-content\">\r\n        <Link to=\"/\">\r\n          <StyledSRLogo src={SRLogo} alt=\"\" />\r\n        </Link>\r\n        <StyledRMDBLogo src={TMBDLogo} alt=\"\" />\r\n      </div>\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = 'c6d64194dbb865e9021dfc7c4ef89ee6'\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/'\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280'\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500'\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL }\n","import styled from 'styled-components'\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-size: 42px;\n    text-transform: uppercase;\n    color: #1c1c1c;\n    text-align: center;\n    margin: 30px 0 30px 0;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid'\r\n\r\nconst Grid = ({ header, children }) => {\r\n  return (\r\n    <StyledGrid>\r\n      <h1> {header}</h1>\r\n      <StyledGridContent>{children}</StyledGridContent>\r\n    </StyledGrid>\r\n  )\r\n}\r\n\r\nGrid.propTypes = {\r\n  header: PropTypes.string\r\n}\r\n\r\nexport default Grid\r\n","import styled from 'styled-components'\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 650px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 150px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .hero-wrapper {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n    padding-left: 50px;\n    text-align: center;\n\n    .hero-text {\n      h1 {\n        font-size: 48px;\n        color: #fff;\n\n        @media screen and (max-width: 720px) {\n          font-size: 38px;\n          color: #fff;\n        }\n      }\n\n      p {\n        font-size: 20px;\n        line-height: 30px;\n        color: #fff;\n\n        @media screen and (max-width: 720px) {\n          font-size: 14px;\n          line-height: 20px;\n          color: #fff;\n        }\n      }\n\n      @media screen and (max-width: 720px) {\n        max-width: 100%;\n      }\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n","import React from 'react'\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst HeroImg = ({ image, title, description }) => (\r\n  <StyledHeroImage image={image}>\r\n    <div className=\"hero-wrapper\">\r\n      <div className=\"hero-text\">\r\n        <h1>{title}</h1>\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n  </StyledHeroImage>\r\n)\r\n\r\nHeroImg.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string\r\n}\r\n\r\nexport default HeroImg\r\n","import styled from 'styled-components'\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #1c1c1c;\n  width: 20%;\n  min-width: 200px;\n  height: 60px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-size: 20px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n  border-style: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`\n","import React from 'react'\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoadMoreBtn = ({ text, callback }) => (\r\n  <StyledLoadMoreBtn onClick={callback} type=\"button\">\r\n    {' '}\r\n    {text}{' '}\r\n  </StyledLoadMoreBtn>\r\n)\r\n\r\nLoadMoreBtn.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func\r\n}\r\nexport default LoadMoreBtn\r\n","import styled from 'styled-components'\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 10px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n  }\n\n  .clickable {\n    cursor: pointer;\n\n    :hover {\n      transform: scale(1.05);\n      opacity: 0.8;\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\n    }\n  }\n`\n","import React from 'react'\r\nimport { Link } from '@reach/router'\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieThumb = ({ image, clickable, movieId }) => {\r\n  return (\r\n    <StyledMovieThumb>\r\n      {clickable ? (\r\n        <Link to={`/${movieId}`}>\r\n          <img src={image} className=\"clickable\" alt=\"\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={image} alt=\"\" />\r\n      )}\r\n    </StyledMovieThumb>\r\n  )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  clickable: PropTypes.bool,\r\n  movieId: PropTypes.number\r\n}\r\nexport default MovieThumb\r\n","import styled from 'styled-components'\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-size: 18px;\n    letter-spacing: 1px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    :focus::placeholder {\n      opacity: 0;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 15px;\n    }\n  }\n`\n","import React, { useState, useRef } from 'react'\r\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchBar = ({ callback }) => {\r\n  const [state, setState] = useState('')\r\n  const timeout = useRef(null)\r\n  const searchMovies = e => {\r\n    const { value } = e.target\r\n    clearTimeout(timeout.current)\r\n    setState(value)\r\n\r\n    timeout.current = setTimeout(() => {\r\n      callback(value)\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n    <StyledSearchBar>\r\n      <StyledSearchBarContent>\r\n        <input onChange={searchMovies} value={state} type=\"text\" placeholder=\"Search the movie on your mind...\" />\r\n        <FontAwesome className=\"fa-search\" name=\"search\"></FontAwesome>\r\n      </StyledSearchBarContent>\r\n    </StyledSearchBar>\r\n  )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components'\n\nexport const StyledSpinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #000;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n","import React from 'react'\r\nimport { StyledSpinner } from '../styles/StyledSpinner'\r\n\r\nconst Spinner = () => {\r\n  return <StyledSpinner />\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState } from 'react'\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL, POPULAR_BASE_URL, SEARCH_BASE_URL } from '../../config'\r\nimport Grid from './Grid'\r\n\r\nimport HeroImage from './HeroImage'\r\nimport LoadMoreBtn from './LoadMoreBtn'\r\nimport MovieThumb from './MovieThumb'\r\nimport SearchBar from './SearchBar'\r\nimport Spinner from './Spinner'\r\nimport { useHomeFetch } from '../hooks/useHomeFetch'\r\nimport NoImage from '../images/no_image.jpg'\r\n\r\nconst Home = () => {\r\n  const [searchedTerm, setSearchedTerm] = useState('')\r\n\r\n  const [\r\n    {\r\n      state: { movies, currentPage, totalPages, heroImage },\r\n      loading,\r\n      error\r\n    },\r\n    fetchMovies\r\n  ] = useHomeFetch(searchedTerm)\r\n\r\n  const searchMovies = search => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL\r\n    setSearchedTerm(search)\r\n    fetchMovies(endpoint)\r\n  }\r\n\r\n  const loadMoreMovies = () => {\r\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchedTerm}&page=${currentPage + 1}`\r\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`\r\n    const endpoint = searchedTerm ? searchEndpoint : popularEndpoint\r\n\r\n    fetchMovies(endpoint)\r\n  }\r\n\r\n  if (!movies[0] && !error) return <Spinner />\r\n  if (error && !movies) return <div> Something went wrong. </div>\r\n\r\n  return (\r\n    <>\r\n      {!searchedTerm && <HeroImage image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`} title={heroImage.original_title} description={heroImage.overview} />}\r\n\r\n      <SearchBar callback={searchMovies} />\r\n      <Grid header={searchedTerm ? 'Search Result' : 'Popular Movies'}>\r\n        {movies.map(movie => (\r\n          <MovieThumb key={movie.id} clickable={true} image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage} movieId={movie.id} movieName={movie.original_title} />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {currentPage < totalPages && !loading && <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />}\r\n    </>\r\n  )\r\n}\r\nexport default Home\r\n","import { useState, useEffect } from 'react'\r\nimport { POPULAR_BASE_URL } from '../../config'\r\n\r\nexport const useHomeFetch = searchedTerm => {\r\n  const [state, setState] = useState({ movies: [] })\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const fetchMovies = async endpoint => {\r\n    setLoading(true)\r\n\r\n    const isLoadMore = endpoint.search('page')\r\n\r\n    try {\r\n      const result = await (await fetch(endpoint)).json()\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        movies: isLoadMore !== -1 ? [...prev.movies, ...result.results] : [...result.results],\r\n        heroImage: prev.heroImage || result.results[0],\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      }))\r\n    } catch (error) {\r\n      setError(true)\r\n      setLoading(false)\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.homeState) {\r\n      setState(JSON.parse(sessionStorage.homeState))\r\n      setLoading(false)\r\n    } else {\r\n      fetchMovies(`${POPULAR_BASE_URL}`)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!searchedTerm) {\r\n      sessionStorage.setItem('homeState', JSON.stringify(state))\r\n    }\r\n  }, [searchedTerm, state])\r\n\r\n  return [{ state, loading, error }, fetchMovies]\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Raleway\", sans-serif;\n    user-select: none;\n    background: #f5f5f5;\n  }\n\n\n`\n","import styled from 'styled-components'\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`\n","import React from 'react'\r\nimport { Link } from '@reach/router'\r\nimport { StyledNavigation } from '../styles/StyledNavigation'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Navigation = ({ movie }) => (\r\n  <StyledNavigation>\r\n    <div className=\"navigation-content\">\r\n      <Link to=\"/\">\r\n        <p> HOME </p>\r\n      </Link>\r\n      <p> | </p>\r\n      <p> {movie} </p>\r\n    </div>\r\n  </StyledNavigation>\r\n)\r\n\r\nNavigation.propTypes = {\r\n  movie: PropTypes.string\r\n}\r\n\r\nexport default Navigation\r\n","import styled from 'styled-components'\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config'\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props => (props.backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')` : '#000')};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      letter-spacing: 1px;\n\n      margin-top: 30px;\n    }\n\n    p {\n      font-size: 16px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .rating {\n    font-size: 8px;\n    letter-spacing: 2px;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 600;\n    border-radius: 50%;\n    margin-top: 15px;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n      margin-top: 20px;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n","import React from 'react'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\r\nimport MovieThumb from './MovieThumb'\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieInfo = ({ movie }) => {\r\n  return (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n      <div className=\"movieinfo-content\">\r\n        <div className=\"movieinfo-thumb\">\r\n          <MovieThumb image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage} clickable={false} />\r\n        </div>\r\n        <div className=\"movieinfo-text\">\r\n          <h1>{movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className=\"rating-director\">\r\n            <div>\r\n              <h3 className=\"rating\">IMDB RATING</h3>\r\n              <div className=\"score\"> {movie.vote_average}</div>\r\n            </div>\r\n            <div className=\"director\">\r\n              <h3> DIRECTOR {movie.directors.length > 1 ? 'S' : null}</h3>\r\n              {movie.directors.map(director => {\r\n                return <p key={director.credit_id}>{director.name}</p>\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfo>\r\n  )\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n  directors: PropTypes.array\r\n}\r\n\r\nexport default MovieInfo\r\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components'\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .movieinfobar-content-col {\n    width: 33.33%;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n  }\n\n  .movieinfobar-info {\n    padding: 0 0 0 20px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n  }\n\n  .fa-budget {\n    float: left;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`\n","import React from 'react'\r\nimport FontAwesome from 'react-fontawesome'\r\nimport { calcTime, convertMoney } from '../../helpers'\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n  return (\r\n    <StyledMovieInfoBar>\r\n      <div className=\"movieinfobar-content\">\r\n        <div className=\"movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" />\r\n          <span className=\"movieinfobar-info\">Running time {calcTime(time)}</span>\r\n        </div>\r\n\r\n        <div className=\"movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" />\r\n          <span className=\"movieinfobar-info\">Budget {convertMoney(budget)}</span>\r\n        </div>\r\n\r\n        <div className=\"movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" />\r\n          <span className=\"movieinfobar-info\">Revenue {convertMoney(revenue)}</span>\r\n        </div>\r\n      </div>\r\n    </StyledMovieInfoBar>\r\n  )\r\n}\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number\r\n}\r\n\r\nexport default MovieInfoBar\r\n","import styled from 'styled-components'\n\nexport const StyledActor = styled.div`\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n  transition: 0.5s all ease;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  :hover {\n    transform: scale(1.05);\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);\n  }\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`\n","import React from 'react'\r\nimport { StyledActor } from '../styles/StyledActor'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Actor = ({ actor }) => {\r\n  return (\r\n    <StyledActor>\r\n      <img src={actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage} alt=\"\" />\r\n      <span className=\"actor-name\">{actor.name}</span>\r\n      <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n  )\r\n}\r\n\r\nActor.propTypes = {\r\n  actor: PropTypes.object\r\n}\r\n\r\nexport default Actor\r\n","import React from 'react'\r\nimport Navigation from './elements/Navigation'\r\nimport MovieInfo from './elements/MovieInfo'\r\nimport MovieInfoBar from './elements/MovieInfoBar'\r\nimport Actor from './elements/Actor'\r\nimport Grid from './elements/Grid'\r\nimport Spinner from './elements/Spinner'\r\nimport { useMovieFetch } from './hooks/useMovieFetch'\r\n\r\nconst Movie = ({ movieId }) => {\r\n  const [state, loading, error] = useMovieFetch(movieId)\r\n\r\n  if (error) return <div> Something went wrong :( </div>\r\n  if (loading) return <Spinner />\r\n\r\n  return (\r\n    <>\r\n      <Navigation movie={state.original_title} />\r\n      <MovieInfo movie={state} />\r\n      <MovieInfoBar time={state.runtime} budget={state.budget} revenue={state.revenue} />\r\n      <Grid header=\"Actors\">\r\n        {state.actors.map(actor => (\r\n          <Actor actor={actor} key={actor.credit_id} />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import { useEffect, useState, useCallback } from 'react'\r\nimport { API_URL, API_KEY } from '../../config'\r\n\r\nexport const useMovieFetch = movieId => {\r\n  const [state, setState] = useState({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true)\r\n    try {\r\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n      const result = await (await fetch(endpoint)).json()\r\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n      const creditResults = await (await fetch(creditsEndpoint)).json()\r\n\r\n      const directors = creditResults.crew.filter(member => member.job === 'Director')\r\n      setState({\r\n        ...result,\r\n        actors: creditResults.cast,\r\n        directors\r\n      })\r\n    } catch (error) {\r\n      setError(true)\r\n      setLoading(false)\r\n    }\r\n    setLoading(false)\r\n  }, [movieId])\r\n\r\n  useEffect(() => {\r\n    if (localStorage[movieId]) {\r\n      setState(JSON.parse(localStorage[movieId]))\r\n      setLoading(false)\r\n    } else {\r\n      fetchData()\r\n    }\r\n  }, [fetchData, movieId])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(movieId, JSON.stringify(state))\r\n  }, [movieId, state])\r\n\r\n  return [state, loading, error]\r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => <div> Whoooooops... Looks like you're lost! </div>\r\n\r\nexport default NotFound\r\n","import React from 'react'\nimport Header from './elements/Header'\nimport Home from './elements/Home'\nimport { GlobalStyle } from './styles/GlobalStyle'\nimport { Router } from '@reach/router'\nimport Movie from './Movie'\nimport NotFound from './NotFound'\n\nconst App = () => (\n  <>\n    <Header />\n\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />\n    </Router>\n\n    <GlobalStyle />\n  </>\n)\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}